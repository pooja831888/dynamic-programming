class Solution {
    public int rob(int[] nums) {
        int n=nums.length;
        if(n==0)return 0;
        if(n==1)return nums[0];
        if(n==2) return Math.max(nums[0],nums[1]);

        int rob1=robh(nums,0,n-2);
        int rob2=robh(nums,1,n-1);
        return Math.max(rob1,rob2);  
    }
    public int robh(int[] nums,int start,int end)
    {
        int prev2=0;
        int prev1=0;

        for(int i=start; i<=end; i++)
        {
            int current=Math.max(prev1,nums[i]+prev2);
            prev2=prev1;
            prev1=current;
        }
        return prev1;
    }
}
